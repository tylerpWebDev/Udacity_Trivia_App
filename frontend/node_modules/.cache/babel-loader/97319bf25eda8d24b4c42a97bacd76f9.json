{"ast":null,"code":"var _jsxFileName = \"/Users/tylerproctor/Desktop/Files to Back up/CodeEd/Udacity_Projects/Section_1/Project1/Udacity_Fyurr_App_Project/projects/02_trivia_api/starter/frontend/src/components/FormView.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n  constructor(props) {\n    super();\n\n    this.submitQuestion = event => {\n      event.preventDefault();\n      $.ajax({\n        url: '/questions',\n        //TODO: update request URL\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          question: this.state.question,\n          answer: this.state.answer,\n          difficulty: this.state.difficulty,\n          category: this.state.category\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          console.log(result);\n          document.getElementById(\"questionInput\").value = \"Success!\";\n          document.getElementById(\"answerInput\").value = \"\";\n          setTimeout(function () {\n            document.getElementById(\"add-question-form\").reset();\n          }, 2000);\n          return;\n        },\n        error: error => {\n          console.log(error);\n          alert('Unable to add question. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      question: \"\",\n      answer: \"\",\n      difficulty: 1,\n      category: 1,\n      categories: {}\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: `/categories`,\n      //TODO: update request URL\n      type: \"GET\",\n      success: result => {\n        this.setState({\n          categories: result.categories\n        });\n        return;\n      },\n      error: error => {\n        alert('Unable to load categories. Please try your request again');\n        return;\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"add-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"Add a New Trivia Question\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-view\",\n      id: \"add-question-form\",\n      onSubmit: this.submitQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Question\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"questionInput\",\n      name: \"question\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Answer\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"answerInput\",\n      name: \"answer\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"Difficulty\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"difficulty\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"5\"))), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Category\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"category\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, Object.keys(this.state.categories).map(id => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: id,\n        value: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, this.state.categories[id]);\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default FormView;","map":{"version":3,"sources":["/Users/tylerproctor/Desktop/Files to Back up/CodeEd/Udacity_Projects/Section_1/Project1/Udacity_Fyurr_App_Project/projects/02_trivia_api/starter/frontend/src/components/FormView.js"],"names":["React","Component","$","FormView","constructor","props","submitQuestion","event","preventDefault","ajax","url","type","dataType","contentType","data","JSON","stringify","question","state","answer","difficulty","category","xhrFields","withCredentials","crossDomain","success","result","console","log","document","getElementById","value","setTimeout","reset","error","alert","handleChange","setState","target","name","categories","componentDidMount","render","Object","keys","map","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\n\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n  constructor(props){\n    super();\n    this.state = {\n      question: \"\",\n      answer: \"\",\n      difficulty: 1,\n      category: 1,\n      categories: {}\n    }\n  }\n\n  componentDidMount(){\n    $.ajax({\n      url: `/categories`, //TODO: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({ categories: result.categories })\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load categories. Please try your request again') \n        return;\n      }\n    })\n  }\n\n\n  submitQuestion = (event) => {\n    event.preventDefault();\n    $.ajax({\n      url: '/questions', //TODO: update request URL\n      type: \"POST\",\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        question: this.state.question,\n        answer: this.state.answer,\n        difficulty: this.state.difficulty,\n        category: this.state.category\n      }),\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      success: (result) => {\n        console.log(result);\n        document.getElementById(\"questionInput\").value = \"Success!\";\n        document.getElementById(\"answerInput\").value = \"\";\n        setTimeout(function(){document.getElementById(\"add-question-form\").reset()}, 2000);\n        return;\n      },\n      error: (error) => {\n        console.log(error)\n        alert('Unable to add question. Please try your request again')\n        return;\n      }\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  render() {\n    return (\n      <div id=\"add-form\">\n        <h2>Add a New Trivia Question</h2>\n        <form className=\"form-view\" id=\"add-question-form\" onSubmit={this.submitQuestion}>\n          <label>\n            Question\n            <input type=\"text\" id=\"questionInput\" name=\"question\" onChange={this.handleChange}/>\n          </label>\n          <label>\n            Answer\n            <input type=\"text\" id=\"answerInput\" name=\"answer\" onChange={this.handleChange}/>\n          </label>\n          <label>\n            Difficulty\n            <select name=\"difficulty\" onChange={this.handleChange}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>\n          </label>\n          <label>\n            Category\n            <select name=\"category\" onChange={this.handleChange}>\n              {Object.keys(this.state.categories).map(id => {\n                  return (\n                    <option key={id} value={id}>{this.state.categories[id]}</option>\n                  )\n                })}\n            </select>\n          </label>\n          <input type=\"submit\" className=\"button\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FormView;\n"]},"metadata":{},"sourceType":"module"}